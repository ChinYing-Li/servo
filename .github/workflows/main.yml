# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ github-actions-dev ]
  pull_request:
    branches: [ github-actions-dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  RUST_BACKTRACE: 1
  SHELL: /bin/bash

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # build-mac:
  #   name: Build (macOS)
  #   runs-on: macos-10.15
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         fetch-depth: 2
  #     - name: Bootstrap
  #       run: |
  #         python3 -m pip install --upgrade pip virtualenv
  #         brew bundle install --verbose --no-upgrade --file=etc/taskcluster/macos/Brewfile
  #         brew bundle install --verbose --no-upgrade --file=etc/taskcluster/macos/Brewfile-build
  #         brew uninstall openssl@1.0.2t
  #         rm -rf /usr/local/etc/openssl
  #         rm -rf /usr/local/etc/openssl@1.1
  #         brew install openssl@1.1 gnu-tar
  #     - name: Release build
  #       run: |
  #         export OPENSSL_INCLUDE_DIR="$(brew --prefix openssl)/include"
  #         export OPENSSL_LIB_DIR="$(brew --prefix openssl)/lib"
  #         export PKG_CONFIG_PATH="$(brew --prefix libffi)/lib/pkgconfig/"
  #         export PKG_CONFIG_PATH="$(brew --prefix zlib)/lib/pkgconfig/:$PKG_CONFIG_PATH"
  #         python3 ./mach build --release
  #     - name: Smoketest
  #       run: python3 ./mach smoketest
  #     - name: Package binary
  #       run: gtar -czf target.tar.gz target/release/servo target/release/*.dylib resources
  #     - name: Archive binary
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: release-binary-macos
  #         path: target.tar.gz

  wpt1:
    #needs: build-mac
    runs-on: macos-10.15
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 2

      #- name: Download release binary
      #  uses: actions/download-artifact@v2
      #  with:
      #    name: release-binary-macos

      - name: Fake build
        run: |
          wget https://joshmatthews.net/release-binary-macos.zip
          unzip release-binary-macos.zip

      - name: Prep test environment
        run: |
          brew install gnu-tar
          gtar -xzf target.tar.gz
          python3 -m pip install --upgrade pip virtualenv
          brew bundle install --verbose --no-upgrade --file=etc/taskcluster/macos/Brewfile
      - name: Smoketest
        run: python3 ./mach smoketest
      - name: Run tests
        run: |
          python3 ./mach test-wpt --release --processes=3 --timeout-multiplier=8 --total-chunks=20 --this-chunk=1 --log-raw=test-wpt.log --log-servojson=wpt-jsonsummary.log --always-succeed | cat
          python3 ./mach filter-intermittents wpt-jsonsummary.log --log-intermittents=intermittents.log --log-filteredsummary=filtered-wpt-summary.log --tracker-api=default --reporter-api=default

      - name: Archive logs
        uses: actions/upload-artifact@v2
        with:
          name: wpt1-logs-macos
          path: |
            test-wpt.log
            wpt-jsonsummary.log
            filtered-wpt-summary.log
            intermittents.log
      

  #build:
  #  name: Build
  #  runs-on: ubuntu-20.04
  #  steps:
      #- uses: actions/checkout@v2
      #  with:
      #    fetch-depth: 2
      #- name: Bootstrap
      #  run: |
      #    python3 -m pip install --upgrade pip virtualenv
      #    sudo apt update
      #    python3 ./mach bootstrap
      #- name: Release build
      #  run: python3 ./mach build --release
      #- name: Fake build
      #  run: |
      #    wget https://joshmatthews.net/release-binary.zip
      #    unzip release-binary.zip
      #- name: Package binary
      #  run: tar -czf target.tar.gz target/release/servo resources
      #- name: Archive binary
      #  uses: actions/upload-artifact@v2
      #  with:
      #    name: release-binary
      #    path: target.tar.gz

  #wpt1:
    #needs: build
  #  runs-on: ubuntu-20.04
  #  steps:
  #    - uses: actions/checkout@v2
  #      with:
  #        fetch-depth: 2

      #- name: Download release binary
      #  uses: actions/download-artifact@v2
      #  with:
      #    name: release-binary

  #    - name: Fake build
  #      run: |
  #        wget https://joshmatthews.net/release-binary.zip
  #        unzip release-binary.zip

  #    - name: Prep test environment
  #      run: |
  #        tar -xzf target.tar.gz
  #        python3 -m pip install --upgrade pip virtualenv
  #        sudo apt update
  #        sudo apt install -qy --no-install-recommends libgl1 libssl1.1 libdbus-1-3 libxcb-xfixes0-dev libxcb-shape0-dev libunwind8 libegl1-mesa
  #        wget http://mirrors.kernel.org/ubuntu/pool/main/libf/libffi/libffi6_3.2.1-8_amd64.deb
  #        sudo apt install ./libffi6_3.2.1-8_amd64.deb
  #        python3 ./mach bootstrap-gstreamer
          
  #    - name: Run tests
  #      run: |
  #        python3 ./mach test-wpt --release --processes=2 --total-chunks=20 --this-chunk=1 --log-raw=test-wpt.log --log-servojson=wpt-jsonsummary.log --always-succeed | cat
  #        python3 ./mach filter-intermittents wpt-jsonsummary.log --log-intermittents=intermittents.log --log-filteredsummary=filtered-wpt-summary.log --tracker-api=default --reporter-api=default

  #    - name: Archive logs
  #      uses: actions/upload-artifact@v2
  #      with:
  #        name: wpt1-logs
  #        path: |
  #          test-wpt.log
  #          wpt-jsonsummary.log
  #          filtered-wpt-summary.log
  #          intermittents.log
